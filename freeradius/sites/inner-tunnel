#  -*- text -*-
######################################################################
#
#	This is a virtual server that handles *only* inner tunnel
#	requests for EAP-TTLS and PEAP types.
#
#	$Id$
#
######################################################################

server inner-tunnel {
	#
	#  This next section is here to allow testing of the "inner-tunnel"
	#  authentication methods, independently from the "default" server.
	#  It is listening on "localhost", so that it can only be used from
	#  the same machine.
	#
	#      $ radtest USER PASSWORD 127.0.0.1:18120 0 testing123
	#
	#  If it works, you have configured the inner tunnel correctly.  To check
	#  if PEAP will work, use:
	#
	#      $ radtest -t mschap USER PASSWORD 127.0.0.1:18120 0 testing123
	#
	#  If that works, PEAP should work.  If that command doesn't work, then
	#
	#      FIX THE INNER TUNNEL CONFIGURATION SO THAT IT WORKS.
	#
	#  Do NOT do any PEAP tests.  It won't help.  Instead, concentrate
	#  on fixing the inner tunnel configuration.  DO NOTHING ELSE.
	listen {
	    ipaddr = 127.0.0.1
	    port = 18120
	    type = auth
	}

	authorize {
		eap {
			ok = return
		}
		ldap
		if ((ok || updated) && User-Password && !control:Auth-Type) {
			update {
			    control:Auth-Type := ldap
			}
		}
		expiration
		logintime
		pap
	}

	authenticate {
		Auth-Type PAP {
			pap
		}
		Auth-Type LDAP {
			ldap
		}
		eap
	}

    post-auth {
        eap
        #
        #  These attributes are for the inner-tunnel only,
        #  and MUST NOT be copied to the outer reply.
        #
        update reply {
                User-Name !* ANY
                Message-Authenticator !* ANY
                EAP-Message !* ANY
                Proxy-State !* ANY
                MS-MPPE-Encryption-Types !* ANY
                MS-MPPE-Encryption-Policy !* ANY
                MS-MPPE-Send-Key !* ANY
                MS-MPPE-Recv-Key !* ANY
        }

        #
        #  Copy the inner reply attributes to the outer
        #  session-state list.  The post-auth policy will take
        #  care of copying the outer session-state list to the
        #  outer reply.
        #
        update {
                &outer.session-state: += &reply:
        }
    }
} # inner-tunnel server block
